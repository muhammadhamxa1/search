{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/TestProject/search/src/components/search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Fuse from 'fuse.js';\nimport text from './dictionary.txt'; // import characters from './characters.json';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  const [query, updateQuery] = useState('');\n  let list = ['Kelly', 'Creed', 'Stanley', 'Crowd', 'Steel'];\n  fetch(text).then(function (response) {\n    response.text().then(function (text) {\n      list = text; // console.log(text);\n      // const demo = list.length();\n\n      let options = {\n        shouldSort: true,\n        tokenize: true,\n        matchAllTokens: true,\n        findAllMatches: true,\n        threshold: 0,\n        location: 0,\n        distance: 0,\n        maxPatternLength: 32,\n        minMatchCharLength: 1 // don't include the keys property\n\n      };\n      const fuse = new Fuse(list, options);\n      console.log(list);\n      const results = fuse.search(query);\n      const characterResults = results.length !== 0 ? results.map(character => character.item) : list;\n\n      function onSearch({\n        currentTarget\n      }) {\n        updateQuery(currentTarget.value);\n      }\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: characterResults.map(character => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Name:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 58,\n                      columnNumber: 21\n                    }, this), \" \", character]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 17\n                }, this)\n              }, character, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 15\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"search\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: query,\n                onChange: onSearch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true);\n    });\n  });\n}\n\n_s(Search, \"8nFaMJCZxfteh6ig6zyWgUMVHa8=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/dev/Desktop/TestProject/search/src/components/search.jsx"],"names":["React","useState","Fuse","text","Search","query","updateQuery","list","fetch","then","response","options","shouldSort","tokenize","matchAllTokens","findAllMatches","threshold","location","distance","maxPatternLength","minMatchCharLength","fuse","console","log","results","search","characterResults","length","map","character","item","onSearch","currentTarget","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,kBAAjB,C,CAEA;;;;AAIA,eAAgB,SAASC,MAAT,GAAkB;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBL,QAAQ,CAAC,EAAD,CAArC;AAEA,MAAIM,IAAI,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,EAA6B,OAA7B,EAAqC,OAArC,CAAX;AACAC,EAAAA,KAAK,CAACL,IAAD,CAAL,CAAYM,IAAZ,CAAiB,UAASC,QAAT,EAAmB;AAClCA,IAAAA,QAAQ,CAACP,IAAT,GAAgBM,IAAhB,CAAqB,UAASN,IAAT,EAAe;AACnCI,MAAAA,IAAI,GAAEJ,IAAN,CADmC,CAGtC;AACA;;AACA,UAAIQ,OAAO,GAAG;AACdC,QAAAA,UAAU,EAAE,IADE;AAEdC,QAAAA,QAAQ,EAAE,IAFI;AAGdC,QAAAA,cAAc,EAAE,IAHF;AAIdC,QAAAA,cAAc,EAAE,IAJF;AAKdC,QAAAA,SAAS,EAAE,CALG;AAMdC,QAAAA,QAAQ,EAAE,CANI;AAOdC,QAAAA,QAAQ,EAAE,CAPI;AAQdC,QAAAA,gBAAgB,EAAE,EARJ;AASdC,QAAAA,kBAAkB,EAAE,CATN,CAWZ;;AAXY,OAAd;AAcA,YAAMC,IAAI,GAAG,IAAInB,IAAJ,CAASK,IAAT,EAAeI,OAAf,CAAb;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACA,YAAMiB,OAAO,GAAGH,IAAI,CAACI,MAAL,CAAYpB,KAAZ,CAAhB;AACA,YAAMqB,gBAAgB,GAAGF,OAAO,CAACG,MAAR,KAAmB,CAAnB,GAAuBH,OAAO,CAACI,GAAR,CAAYC,SAAS,IAAIA,SAAS,CAACC,IAAnC,CAAvB,GAAkEvB,IAA3F;;AAEA,eAASwB,QAAT,CAAkB;AAAEC,QAAAA;AAAF,OAAlB,EAAqC;AACnC1B,QAAAA,WAAW,CAAC0B,aAAa,CAACC,KAAf,CAAX;AACD;;AAED,0BACE;AAAA,gCAEE;AAAA,iCACE;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAA,kCACE;AAAA,sBACGP,gBAAgB,CAACE,GAAjB,CAAqBC,SAAS,IAAI;AACjC,kCACE;AAAA,uCACE;AAAA,yCACE;AAAA,4CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,OAC2BA,SAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,iBAASA,SAAT;AAAA;AAAA;AAAA;AAAA,sBADF;AASD,aAVA;AADH;AAAA;AAAA;AAAA;AAAA,kBADF,eAcE;AAAA,mCACE;AAAM,cAAA,SAAS,EAAC,QAAhB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,KAAK,EAAExB,KAA1B;AAAiC,gBAAA,QAAQ,EAAE0B;AAA3C;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA,sBADF;AAiCD,KA7DG;AA8DH,GA/DC;AAgED;;GApEwB3B,M;;KAAAA,M","sourcesContent":["import React, { useState } from 'react';\nimport Fuse from 'fuse.js';\nimport text from './dictionary.txt'\n\n// import characters from './characters.json';\n\n\n\nexport  default function Search() {\n  const [query, updateQuery] = useState('');\n\n  let list = ['Kelly', 'Creed', 'Stanley','Crowd','Steel'];\n  fetch(text).then(function(response) {\n    response.text().then(function(text) {\n     list =text;\n  \n  // console.log(text);\n  // const demo = list.length();\n  let options = {\n  shouldSort: true,\n  tokenize: true,\n  matchAllTokens: true,\n  findAllMatches: true,\n  threshold: 0,\n  location: 0,\n  distance: 0,\n  maxPatternLength: 32,\n  minMatchCharLength: 1,\n    \n    // don't include the keys property\n  };\n\n  const fuse = new Fuse(list, options);\n  console.log(list)\n  const results = fuse.search(query);\n  const characterResults = results.length !== 0 ? results.map(character => character.item) : list;\n\n  function onSearch({ currentTarget }) {\n    updateQuery(currentTarget.value);\n  }\n\n  return (\n    <>\n\n      <header>\n        <div >\n          <h1>Characters</h1>\n        </div>\n      </header>\n\n      <main>\n        <ul>\n          {characterResults.map(character => {\n            return (\n              <li key={character}>\n                <ul>\n                  <li>\n                    <strong>Name:</strong> { character }\n                  </li>\n                </ul>\n              </li>\n            )\n          })}\n        </ul>\n        <aside>\n          <form className=\"search\">\n            <label>Search</label>\n            <input type=\"text\" value={query} onChange={onSearch} />\n          </form>\n        </aside>\n      </main>\n\n    </>\n  );\n});\n});\n}"]},"metadata":{},"sourceType":"module"}