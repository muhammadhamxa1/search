{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/TestProject/search/src/components/search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Fuse from 'fuse.js';\nimport text from './dictionary.txt'; // import characters from './characters.json';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  const [query, updateQuery] = useState('');\n  const [instance, setInstance] = useState([]);\n  const [characterResults, setCharacterResults] = useState([]);\n  let list = ['Kellu', 'whlsds', 'sasa', 'sass'];\n  fetch(text).then(function (response) {\n    response.text().then(function (text) {\n      setInstance(text.split(\"\\n\")); // console.log(instance); \n    });\n  });\n  let options = {\n    shouldSort: true,\n    tokenize: true,\n    matchAllTokens: true,\n    findAllMatches: true,\n    threshold: 0,\n    location: 0,\n    distance: 0,\n    maxPatternLength: 32,\n    minMatchCharLength: 1 // don't include the keys property\n\n  };\n\n  function change(e) {\n    updateQuery(e.target.value);\n  }\n\n  ;\n\n  function onSearch() {\n    const fuse = new Fuse(list, options); // console.log(list)\n\n    const results = fuse.search(query);\n    setCharacterResults(results.length !== 0 ? results.map(character => character.item) : list);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: characterResults.map(ch => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: query,\n            onChange: change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onSearch,\n            children: \"Hello\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Search, \"uQNfMA74dfbNAQ8TyP4141bCSjo=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/dev/Desktop/TestProject/search/src/components/search.jsx"],"names":["React","useState","Fuse","text","Search","query","updateQuery","instance","setInstance","characterResults","setCharacterResults","list","fetch","then","response","split","options","shouldSort","tokenize","matchAllTokens","findAllMatches","threshold","location","distance","maxPatternLength","minMatchCharLength","change","e","target","value","onSearch","fuse","results","search","length","map","character","item","ch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,kBAAjB,C,CAEA;;;;AAGA,eAAgB,SAASC,MAAT,GAAkB;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBL,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACM,QAAD,EAAUC,WAAV,IAAuBP,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACQ,gBAAD,EAAkBC,mBAAlB,IAAuCT,QAAQ,CAAC,EAAD,CAArD;AACA,MAAIU,IAAI,GAAG,CAAC,OAAD,EAAS,QAAT,EAAkB,MAAlB,EAAyB,MAAzB,CAAX;AAECC,EAAAA,KAAK,CAACT,IAAD,CAAL,CAAYU,IAAZ,CAAiB,UAASC,QAAT,EAAmB;AACnCA,IAAAA,QAAQ,CAACX,IAAT,GAAgBU,IAAhB,CAAqB,UAASV,IAAT,EAAe;AAClCK,MAAAA,WAAW,CAACL,IAAI,CAACY,KAAL,CAAW,IAAX,CAAD,CAAX,CADkC,CAEpC;AACC,KAHD;AAKD,GANA;AASD,MAAIC,OAAO,GAAG;AACdC,IAAAA,UAAU,EAAE,IADE;AAEdC,IAAAA,QAAQ,EAAE,IAFI;AAGdC,IAAAA,cAAc,EAAE,IAHF;AAIdC,IAAAA,cAAc,EAAE,IAJF;AAKdC,IAAAA,SAAS,EAAE,CALG;AAMdC,IAAAA,QAAQ,EAAE,CANI;AAOdC,IAAAA,QAAQ,EAAE,CAPI;AAQdC,IAAAA,gBAAgB,EAAE,EARJ;AASdC,IAAAA,kBAAkB,EAAE,CATN,CAWZ;;AAXY,GAAd;;AAaF,WAASC,MAAT,CAAiBC,CAAjB,EAAmB;AACjBrB,IAAAA,WAAW,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;;AAAA;;AAGC,WAASC,QAAT,GAAoB;AAClB,UAAMC,IAAI,GAAG,IAAI7B,IAAJ,CAASS,IAAT,EAAgBK,OAAhB,CAAb,CADkB,CAElB;;AACA,UAAMgB,OAAO,GAAGD,IAAI,CAACE,MAAL,CAAY5B,KAAZ,CAAhB;AAECK,IAAAA,mBAAmB,CAAGsB,OAAO,CAACE,MAAR,KAAmB,CAAnB,GAAuBF,OAAO,CAACG,GAAR,CAAYC,SAAS,IAAIA,SAAS,CAACC,IAAnC,CAAvB,GAAkE1B,IAArE,CAAnB;AACF;;AAAA;AAED,sBACE;AAAA,4BAEE;AAAA,6BACE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAA,8BACE;AAAA,kBAAKF,gBAAgB,CAAC0B,GAAjB,CAAqBG,EAAE,iBAC1B;AAAA,oBACCA;AADD;AAAA;AAAA;AAAA;AAAA,gBADG;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAGjC,KAA3B;AAAkC,YAAA,QAAQ,EAAEqB;AAA5C;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAEI,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AA4BD;;GArEwB1B,M;;KAAAA,M","sourcesContent":["import React, { useState } from 'react';\nimport Fuse from 'fuse.js';\nimport text from './dictionary.txt';\n\n// import characters from './characters.json';\n\n\nexport  default function Search() {\n  const [query, updateQuery] = useState('');\n  const [instance,setInstance]=useState([]);\n  const [characterResults,setCharacterResults]=useState([]);\n  let list = ['Kellu','whlsds','sasa','sass'];\n\n   fetch(text).then(function(response) {\n    response.text().then(function(text) {\n      setInstance(text.split(\"\\n\"));\n    // console.log(instance); \n    });\n    \n  });\n\n\n  let options = {\n  shouldSort: true,\n  tokenize: true,\n  matchAllTokens: true,\n  findAllMatches: true,\n  threshold: 0,\n  location: 0,\n  distance: 0,\n  maxPatternLength: 32,\n  minMatchCharLength: 1,\n    \n    // don't include the keys property\n  };\nfunction change (e){\n  updateQuery(e.target.value);\n};\n\n\n  function onSearch() {\n    const fuse = new Fuse(list , options);\n    // console.log(list)\n    const results = fuse.search(query);\n  \n     setCharacterResults ( results.length !== 0 ? results.map(character => character.item) : list);\n  };\n\n  return (\n    <>\n\n      <header>\n        <div >\n          <h1>Characters</h1>\n        </div>\n      </header>\n\n      <main>\n        <h1>{characterResults.map(ch => \n          <li>\n          {ch}\n          </li>\n          )}\n          </h1>\n        <aside>\n          <form>\n            <label>Search</label>\n            <input type=\"text\" value={ query} onChange={change}/>\n            <button type=\"button\" onClick={onSearch}>Hello</button>\n          </form>\n        </aside>\n      </main>\n\n    </>\n  );\n\n}"]},"metadata":{},"sourceType":"module"}